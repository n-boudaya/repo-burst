{"version":3,"file":"bundle.js","sources":["index.js"],"sourcesContent":["import * as d3 from 'd3';\r\n\r\n\r\nd3.json(\"flare-2.json\").then(function (flare) {\r\n  const chart = Sunburst2(flare);\r\n  console.log(chart);\r\n  const output = d3.select('body').append('svg').append('chart');\r\n  console.log(output);\r\n});\r\n\r\nconsole.log(\"aeiou\");\r\n\r\nfunction Sunburst2(data){\r\n    // Specify the chart’s colors and approximate radius (it will be adjusted at the end).\r\n    const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\r\n    const radius = 928 / 2;\r\n  \r\n    // Prepare the layout.\r\n    const partition = data => d3.partition()\r\n      .size([2 * Math.PI, radius])\r\n    (d3.hierarchy(data)\r\n      .sum(d => d.value)\r\n      .sort((a, b) => b.value - a.value));\r\n  \r\n    const arc = d3.arc()\r\n      .startAngle(d => d.x0)\r\n      .endAngle(d => d.x1)\r\n      .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n      .padRadius(radius / 2)\r\n      .innerRadius(d => d.y0)\r\n      .outerRadius(d => d.y1 - 1);\r\n  \r\n    const root = partition(data);\r\n  \r\n    // Create the SVG container.\r\n    const svg = d3.create(\"svg\");\r\n  \r\n    // Add an arc for each element, with a title for tooltips.\r\n    const format = d3.format(\",d\");\r\n    svg.append(\"g\")\r\n        .attr(\"fill-opacity\", 0.6)\r\n      .selectAll(\"path\")\r\n      .data(root.descendants().filter(d => d.depth))\r\n      .join(\"path\")\r\n        .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\r\n        .attr(\"d\", arc)\r\n      .append(\"title\")\r\n        .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n  \r\n    // Add a label for each element.\r\n    svg.append(\"g\")\r\n        .attr(\"pointer-events\", \"none\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"font-size\", 10)\r\n        .attr(\"font-family\", \"sans-serif\")\r\n      .selectAll(\"text\")\r\n      .data(root.descendants().filter(d => d.depth && (d.y0 + d.y1) / 2 * (d.x1 - d.x0) > 10))\r\n      .join(\"text\")\r\n        .attr(\"transform\", function(d) {\r\n          const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\r\n          const y = (d.y0 + d.y1) / 2;\r\n          return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n        })\r\n        .attr(\"dy\", \"0.35em\")\r\n        .text(d => d.data.name);\r\n    \r\n    return svg.node(); \r\n};\r\n\r\n// Copyright 2021-2023 Observable, Inc.\r\n// Released under the ISC license.\r\n// https://observablehq.com/@d3/sunburst\r\nfunction Sunburst(data, { // data is either tabular (array of objects) or hierarchy (nested objects)\r\n  path, // as an alternative to id and parentId, returns an array identifier, imputing internal nodes\r\n  id = Array.isArray(data) ? d => d.id : null, // if tabular data, given a d in data, returns a unique identifier (string)\r\n  parentId = Array.isArray(data) ? d => d.parentId : null, // if tabular data, given a node d, returns its parent’s identifier\r\n  children, // if hierarchical data, given a d in data, returns its children\r\n  value, // given a node d, returns a quantitative value (for area encoding; null for count)\r\n  sort = (a, b) => d3.descending(a.value, b.value), // how to sort nodes prior to layout\r\n  label, // given a node d, returns the name to display on the rectangle\r\n  title, // given a node d, returns its hover text\r\n  link, // given a node d, its link (if any)\r\n  linkTarget = \"_blank\", // the target attribute for links (if any)\r\n  width = 640, // outer width, in pixels\r\n  height = 400, // outer height, in pixels\r\n  margin = 1, // shorthand for margins\r\n  marginTop = margin, // top margin, in pixels\r\n  marginRight = margin, // right margin, in pixels\r\n  marginBottom = margin, // bottom margin, in pixels\r\n  marginLeft = margin, // left margin, in pixels\r\n  padding = 1, // separation between arcs\r\n  startAngle = 0, // the starting angle for the sunburst\r\n  endAngle = 2 * Math.PI, // the ending angle for the sunburst\r\n  radius = Math.min(width - marginLeft - marginRight, height - marginTop - marginBottom) / 2, // outer radius\r\n  color = d3.interpolateRainbow, // color scheme, if any\r\n  fill = \"#ccc\", // fill for arcs (if no color encoding)\r\n  fillOpacity = 0.6, // fill opacity for arcs\r\n} = {}) {\r\n\r\n  // If id and parentId options are specified, or the path option, use d3.stratify\r\n  // to convert tabular data to a hierarchy; otherwise we assume that the data is\r\n  // specified as an object {children} with nested objects (a.k.a. the “flare.json”\r\n  // format), and use d3.hierarchy.\r\n  const root = path != null ? d3.stratify().path(path)(data)\r\n    : id != null || parentId != null ? d3.stratify().id(id).parentId(parentId)(data)\r\n      : d3.hierarchy(data, children);\r\n\r\n\r\n  // Compute the values of internal nodes by aggregating from the leaves.\r\n  value == null ? root.count() : root.sum(d => Math.max(0, value(d)));\r\n\r\n  // Sort the leaves (typically by descending value for a pleasing layout).\r\n  if (sort != null) root.sort(sort);\r\n\r\n  // Compute the partition layout. Note polar coordinates: x is angle and y is radius.\r\n  d3.partition().size([endAngle - startAngle, radius])(root);\r\n\r\n  // Construct a color scale.\r\n  if (color != null) {\r\n    color = d3.scaleSequential([0, root.children.length], color).unknown(fill);\r\n    root.children.forEach((child, i) => child.index = i);\r\n  }\r\n\r\n  // Construct an arc generator.\r\n  const arc = d3.arc()\r\n    .startAngle(d => d.x0 + startAngle)\r\n    .endAngle(d => d.x1 + startAngle)\r\n    .padAngle(d => Math.min((d.x1 - d.x0) / 2, 2 * padding / radius))\r\n    .padRadius(radius / 2)\r\n    .innerRadius(d => d.y0)\r\n    .outerRadius(d => d.y1 - padding);\r\n\r\n  const svg = d3.create(\"svg\")\r\n    .attr(\"viewBox\", [\r\n      marginRight - marginLeft - width / 2,\r\n      marginBottom - marginTop - height / 2,\r\n      width,\r\n      height\r\n    ])\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\r\n    .attr(\"font-family\", \"sans-serif\")\r\n    .attr(\"font-size\", 10)\r\n    .attr(\"text-anchor\", \"middle\");\r\n\r\n  const cell = svg\r\n    .selectAll(\"a\")\r\n    .data(root.descendants())\r\n    .join(\"a\")\r\n    .attr(\"xlink:href\", link == null ? null : d => link(d.data, d))\r\n    .attr(\"target\", link == null ? null : linkTarget);\r\n\r\n  cell.append(\"path\")\r\n    .attr(\"d\", arc)\r\n    .attr(\"fill\", color ? d => color(d.ancestors().reverse()[1]?.index) : fill)\r\n    .attr(\"fill-opacity\", fillOpacity);\r\n\r\n  if (label != null) cell\r\n    .filter(d => (d.y0 + d.y1) / 2 * (d.x1 - d.x0) > 10)\r\n    .append(\"text\")\r\n    .attr(\"transform\", d => {\r\n      if (!d.depth) return;\r\n      const x = ((d.x0 + d.x1) / 2 + startAngle) * 180 / Math.PI;\r\n      const y = (d.y0 + d.y1) / 2;\r\n      return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n    })\r\n    .attr(\"dy\", \"0.32em\")\r\n    .text(d => label(d.data, d));\r\n\r\n  if (title != null) cell.append(\"title\")\r\n    .text(d => title(d.data, d));\r\n\r\n  return svg.node();\r\n}"],"names":["d3"],"mappings":"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"}