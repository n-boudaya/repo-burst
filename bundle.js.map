{"version":3,"file":"bundle.js","sources":["index.js"],"sourcesContent":["import * as d3 from 'd3';\r\n\r\nd3.json(\"dependencies_2024-11-14-14-57-34.json\").then(function (data) {\r\n\r\n    const svg = d3.select(\"body\").append(\"svg\").attr('width', window.innerHeight).attr('height', window.innerHeight);\r\n\r\n    svg.node().appendChild(chord_dependency(data, 10));\r\n    // computeMatrix(data, 8);\r\n});\r\n\r\n// d3.csv(\"flare_depends.csv\").then(function (data) {\r\n//\r\n//     const svg = d3.select(\"body\").append(\"svg\").attr('width', window.innerHeight).attr('height', window.innerHeight);\r\n//\r\n//     svg.node().appendChild(chord_dependency(data));\r\n//\r\n// });\r\n\r\nfunction autoBox() {\r\n    document.body.appendChild(this);\r\n    const {x, y, width, height} = this.getBBox();\r\n    document.body.removeChild(this);\r\n    return [x, y, width, height];\r\n}\r\n\r\nfunction computeMatrix(data, level){\r\n    // console.log(data);\r\n\r\n    var allDepends = [];\r\n    for(const d of data){\r\n        const source = d.path;\r\n\r\n        for(const target of d.outgoing){\r\n            allDepends.push([source,target]);\r\n        }\r\n    }\r\n\r\n    const newData = d3.rollup(allDepends,(D)=>D.length, (d)=>cutoff(d[0],level), (d)=>cutoff(d[1],level));\r\n\r\n    console.log(newData);\r\n\r\n    const uniqueFiles = new Set;\r\n    data.map(d => cutoff(d.path, level)).forEach(e => uniqueFiles.add(e));\r\n    console.log(uniqueFiles);\r\n\r\n    const names = d3.sort(uniqueFiles);\r\n\r\n    const index = new Map(names.map((name, i) => [name, i]));\r\n    console.log(index);\r\n\r\n\r\n    const matrix = Array.from(index, () => new Array(names.length).fill(0));\r\n    // console.log(matrix);\r\n\r\n    let numberOfConnects = 0;\r\n    for(const n of names){\r\n        const nIndex = index.get(n)\r\n\r\n        for(const e of names){\r\n            const eIndex = index.get(e);\r\n\r\n            if(typeof newData.get(n) !== \"undefined\"){\r\n                if(typeof newData.get(n).get(e) !== \"undefined\"){\r\n                    matrix[nIndex][eIndex] = newData.get(n).get(e);\r\n                    console.log(\"From: \"+n+\" To: \"+e+\" Value: \"+newData.get(n).get(e));\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n     console.log(matrix);\r\n    console.log(numberOfConnects);\r\n\r\n}\r\n\r\n\r\n\r\n function cutoff(path, level){\r\n    const pathArr = path.split(\"\\\\\");\r\n\r\n    const shortened = pathArr.slice(0,level);\r\n\r\n    const output = shortened.join(\"\\\\\");\r\n\r\n    // console.log(output);\r\n\r\n    // console.log(\"Path: \"+path+\" Path level: \"+pathArr.length+\" Level: \"+level+\" Output: \"+output);\r\n\r\n    return output;\r\n}\r\n\r\nfunction chord_dependency(data, level)\r\n{\r\n    const width = 1080;\r\n    const height = width;\r\n    const innerRadius = Math.min(width, height) * 0.5 - 90;\r\n    const outerRadius = innerRadius + 10;\r\n\r\n    var allDepends = [];\r\n    for(const d of data){\r\n        const source = d.path;\r\n\r\n        for(const target of d.outgoing){\r\n            allDepends.push([source,target]);\r\n        }\r\n    }\r\n\r\n    const newData = d3.rollup(allDepends,(D)=>D.length, (d)=>cutoff(d[0],level), (d)=>cutoff(d[1],level));\r\n\r\n    console.log(newData);\r\n\r\n    const uniqueFiles = new Set;\r\n    data.map(d => cutoff(d.path, level)).forEach(e => uniqueFiles.add(e));\r\n    console.log(uniqueFiles);\r\n\r\n    const names = d3.sort(uniqueFiles);\r\n\r\n    const index = new Map(names.map((name, i) => [name, i]));\r\n    console.log(index);\r\n\r\n\r\n    const matrix = Array.from(index, () => new Array(names.length).fill(0));\r\n    // console.log(matrix);\r\n\r\n    let numberOfConnects = 0;\r\n    for(const n of names){\r\n        const nIndex = index.get(n)\r\n\r\n        for(const e of names){\r\n            const eIndex = index.get(e);\r\n\r\n            if(typeof newData.get(n) !== \"undefined\"){\r\n                if(typeof newData.get(n).get(e) !== \"undefined\"){\r\n                    matrix[nIndex][eIndex] = newData.get(n).get(e);\r\n                    console.log(\"From: \"+n+\" To: \"+e+\" Value: \"+newData.get(n).get(e));\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(matrix);\r\n    console.log(numberOfConnects);\r\n\r\n\r\n    // // Compute a dense matrix from the weighted links in data.\r\n    // const names = d3.sort(d3.union(data.map(d => d.source), data.map(d => d.target)));\r\n    // console.log(names);\r\n    //\r\n    // const index = new Map(names.map((name, i) => [name, i]));\r\n    // console.log(index);\r\n    //\r\n    // const matrix = Array.from(index, () => new Array(names.length).fill(0));\r\n    // console.log(matrix);\r\n    // for (const {source, target, value} of data) matrix[index.get(source)][index.get(target)] += value;\r\n    // console.log(matrix);\r\n\r\n\r\n    const chord = d3.chordDirected()\r\n        .padAngle(10 / innerRadius)\r\n        .sortSubgroups(d3.descending)\r\n        .sortChords(d3.descending);\r\n\r\n    const arc = d3.arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(outerRadius);\r\n\r\n    const ribbon = d3.ribbonArrow()\r\n        .radius(innerRadius - 1)\r\n        // .sourceRadius(innerRadius -1)\r\n        // .headRadius(innerRadius - 1)\r\n        .padAngle(1 / innerRadius);\r\n\r\n    const colors = d3.quantize(d3.interpolateRainbow, names.length);\r\n\r\n    const svg = d3.create(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n        .attr(\"style\", \"width: 100%; height: auto; font: 10px sans-serif;\");\r\n\r\n    const chords = chord(matrix);\r\n\r\n    const group = svg.append(\"g\")\r\n        .selectAll()\r\n        .data(chords.groups)\r\n        .join(\"g\");\r\n\r\n    group.append(\"path\")\r\n        .attr(\"fill\", d => colors[d.index])\r\n        .attr(\"d\", arc);\r\n\r\n    group.append(\"text\")\r\n        .each(d => (d.angle = (d.startAngle + d.endAngle) / 2))\r\n        .attr(\"dy\", \"0.35em\")\r\n        .attr(\"transform\", d => `\r\n        rotate(${(d.angle * 180 / Math.PI - 90)})\r\n        translate(${outerRadius + 5})\r\n        ${d.angle > Math.PI ? \"rotate(180)\" : \"\"}\r\n      `)\r\n        .attr(\"text-anchor\", d => d.angle > Math.PI ? \"end\" : null)\r\n        .text(d => names[d.index]);\r\n\r\n    group.append(\"title\")\r\n        .text(d => `${names[d.index]}\r\n${d3.sum(chords, c => (c.source.index === d.index) * c.source.value)} outgoing →\r\n${d3.sum(chords, c => (c.target.index === d.index) * c.source.value)} incoming ←`);\r\n\r\n    svg.append(\"g\")\r\n        .attr(\"fill-opacity\", 0.75)\r\n        .selectAll()\r\n        .data(chords)\r\n        .join(\"path\")\r\n        .style(\"mix-blend-mode\", \"multiply\")\r\n        .attr(\"fill\", d => colors[d.target.index])\r\n        .attr(\"d\", ribbon)\r\n        .append(\"title\")\r\n        .text(d => `${names[d.source.index]} → ${names[d.target.index]} ${d.source.value}`);\r\n\r\n    console.log(svg.node());\r\n    // return svg.attr(\"viewBox\", autoBox).node();\r\n    return svg.node();\r\n}\r\n"],"names":["d3"],"mappings":"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"}