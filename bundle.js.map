{"version":3,"file":"bundle.js","sources":["index.js"],"sourcesContent":["import * as d3 from 'd3';\r\n\r\n\r\nd3.json(\"hierarchy_2024-11-18-11-19-10.json\").then(function (data) {\r\n\r\n    const svg = d3.select(\"body\").append(\"svg\").attr('width', window.innerHeight).attr('height', window.innerHeight);\r\n\r\n    svg.node().appendChild(zoomableSunburst(data, 3));\r\n    // svg.node().appendChild(SunburstZoom(data));\r\n\r\n});\r\n\r\nfunction autoBox() {\r\n    document.body.appendChild(this);\r\n    const {x, y, width, height} = this.getBBox();\r\n    document.body.removeChild(this);\r\n    return [x, y, width, height];\r\n}\r\n\r\nfunction zoomableSunburst(data, visibleLevels)\r\n{\r\n    // console.log(data);\r\n\r\n    // Specify the chart’s dimensions.\r\n    const width = 10000;\r\n    const height = width;\r\n    const radius = 1000;\r\n    // const radius = 100;\r\n    const levelPadding = 1;\r\n    let currVisibleLevels = visibleLevels;\r\n\r\n    // Create the color scale.\r\n    const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\r\n\r\n    // Compute the layout.\r\n    const hierarchy = d3.hierarchy(data)\r\n        .sum(d => d.value)\r\n        .sort((a, b) => b.value - a.value);\r\n    let root = d3.partition()\r\n        .size([2 * Math.PI, hierarchy.height + 1])\r\n        (hierarchy);\r\n    root.each(d => d.current = d);\r\n    root.each(d=>d.hasChildren = hasChildren(d));\r\n    console.log(root);\r\n\r\n\r\n    const maxLevel = d3.max(root.leaves(), (d) => d.y0);\r\n\r\n    // console.log(maxLevel);\r\n\r\n    // Create the arc generator.\r\n    const arc = d3.arc()\r\n        .startAngle(d => d.x0)\r\n        .endAngle(d => d.x1)\r\n        .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n        .padRadius(radius * 1.5)\r\n        .innerRadius(d => {\r\n            console.log(d);\r\n            if(d.hasChildren){\r\n                return (visibleLevels - d.y0 +1) * radius;\r\n            }\r\n            else{\r\n                return radius;\r\n            }\r\n            })\r\n        // .innerRadius(d => d.y0 * radius)\r\n        .outerRadius(d => ((visibleLevels - d.y0 +2) * radius) - levelPadding);\r\n        // .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - levelPadding))\r\n\r\n    // Create the SVG container.\r\n    const svg = d3.create(\"svg\")\r\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, width]).attr(\"y\", 100);\r\n        // .style(\"font\", \"10px sans-serif\");\r\n\r\n    // Append the arcs.\r\n    const path = svg.append(\"g\")\r\n        .selectAll(\"path\")\r\n        // .data(root.descendants().slice(1).filter(d=>d.depth<=visibleLevels))\r\n        .data(root.descendants().slice(1))\r\n        .join(\"path\")\r\n        // .attr(\"fill\", d =>\r\n        // {\r\n        //     if(!arcSmall(d)){\r\n        //         while (d.depth > 1) d = d.parent;\r\n        //         return color(d.data.name);\r\n        //     }\r\n        //     else{\r\n        //         return \"#f00\";\r\n        //     }\r\n        //\r\n        // })\r\n        .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\r\n        .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\r\n        .attr(\"pointer-events\", d => arcVisible(d.current) ? \"auto\" : \"none\")\r\n        .attr(\"d\", d => arc(d.current));\r\n\r\n\r\n    // console.log(path);\r\n\r\n    // Make them clickable if they have children.\r\n    path.filter(d => d.children)\r\n        .style(\"cursor\", \"pointer\")\r\n        .on(\"click\", clicked);\r\n\r\n\r\n    const format = d3.format(\",d\");\r\n    path.append(\"title\")\r\n        .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n\r\n    const label = svg.append(\"g\")\r\n        .attr(\"pointer-events\", \"none\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"user-select\", \"none\")\r\n        .selectAll(\"text\")\r\n        // .data(root.descendants().slice(1).filter(d=>d.depth<=visibleLevels))\r\n        .data(root.descendants().slice(1))\r\n        .join(\"text\")\r\n        .attr(\"dy\", \"0.35em\")\r\n        .attr(\"font-size\", d=>(radius)/d.data.name.toString().length)\r\n        .attr(\"font-family\", \"monospace\")\r\n        // .attr(\"dy\", \"10.00em\")\r\n        .attr(\"fill-opacity\", d => +labelVisible(d.current))\r\n        .attr(\"transform\", d => labelTransform(d.current))\r\n        .text(d => d.data.name);\r\n\r\n    const parent = svg.append(\"circle\")\r\n        .datum(root)\r\n        .attr(\"r\", radius)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"click\", clicked);\r\n\r\n    function hasChildren(d){\r\n        if(typeof d.data.children !== \"undefined\"){\r\n            if(d.data.children.length === 0){\r\n                return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Handle zoom on click.\r\n    function clicked(event, p) {\r\n        console.log(p);\r\n        console.log(event);\r\n\r\n        //https://stackoverflow.com/a/69036892\r\n        if (event.ctrlKey) {\r\n            d3.select(this).attr('stroke', 'black').attr('stroke-width', '5');\r\n        } else {\r\n\r\n            parent.datum(p.parent || root);\r\n\r\n            root.each(d => d.target = {\r\n                x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n                x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n                y0: Math.max(0, d.y0 - p.depth),\r\n                y1: Math.max(0, d.y1 - p.depth),\r\n                hasChildren: d.hasChildren,\r\n                name: d.data.name\r\n            });\r\n\r\n            const t = svg.transition().duration(1);\r\n\r\n            // Transition the data on all arcs, even the ones that aren’t visible,\r\n            // so that if this transition is interrupted, entering arcs will start\r\n            // the next transition from the desired position.\r\n            path.transition(t)\r\n                .tween(\"data\", d => {\r\n                    const i = d3.interpolate(d.current, d.target);\r\n                    return t => d.current = i(t);\r\n                })\r\n                .filter(function (d) {\r\n                    return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n                })\r\n                .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\r\n                .attr(\"pointer-events\", d => arcVisible(d.target) ? \"auto\" : \"none\")\r\n                .attrTween(\"d\", d => () => arc(d.current));\r\n\r\n            label.filter(function (d) {\r\n                return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n            }).transition(t)\r\n                .attr(\"fill-opacity\", d => +labelVisible(d.target))\r\n                .attrTween(\"transform\", d => () => labelTransform(d.current));\r\n        }\r\n    }\r\n\r\n    function arcVisible(d) {\r\n        return d.y1 <= visibleLevels+1 && d.y0 >= 1 && d.x1 > d.x0;\r\n    }\r\n\r\n    function labelVisible(d) {\r\n        return d.y1 <= visibleLevels+1 && d.y0 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\r\n    }\r\n\r\n    function arcSmall(d){\r\n        return ((d.x1-d.x0)<0.005);\r\n    }\r\n\r\n    function labelTransform(d) {\r\n        const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\r\n        const y = (visibleLevels - d.y0 +1.5) * radius;\r\n        return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n    }\r\n\r\n    function resetBorders(){\r\n        console.log(\"RESET\");\r\n        // d3.selectAll(\"path\").filter(function(){\r\n        //     return d3.select(this).attr(\"stroke-width\") === \"5\";\r\n        // });\r\n\r\n        console.log(d3.hierarchy(data).find(d=>d.data.path === \"J:\\\\repo-burst\\\\data_and_processing\\\\raw_data\\\\svelte-main\\\\packages\"));\r\n\r\n        const newHierarchy = d3.hierarchy(data);\r\n        newHierarchy.find(d=>d.data.path === \"J:\\\\repo-burst\\\\data_and_processing\\\\raw_data\\\\svelte-main\\\\packages\").children = null;\r\n        // const foundPackages = newHierarchy.find(d=>d.data.path === \"J:\\\\repo-burst\\\\data_and_processing\\\\raw_data\\\\svelte-main\\\\packages\").children = null;\r\n        // foundPackages.children = null;\r\n        console.log(newHierarchy.find(d=>d.data.path === \"J:\\\\repo-burst\\\\data_and_processing\\\\raw_data\\\\svelte-main\\\\packages\"));\r\n\r\n        root = d3.partition()\r\n            .size([2 * Math.PI, hierarchy.height + 1])\r\n            (hierarchy);\r\n        root.each(d => d.current = d);\r\n        console.log(root);\r\n\r\n        update(root);\r\n\r\n    }\r\n\r\n    function slider(event){\r\n        console.log(event.target.value);\r\n\r\n        currVisibleLevels = event.target.value;\r\n    }\r\n\r\n    d3.select(\"#resetbutton\").on(\"click\",resetBorders);\r\n\r\n    d3.select(\"#visibleLevels\").on(\"input\",slider);\r\n\r\n    return svg.node();\r\n}\r\n\r\n\r\n\r\n// function SunburstSimple(data, cutoff, radius) {\r\n//     // Prepare the layout.\r\n//     const partition = data => d3.partition()\r\n//         .size([2 * Math.PI, radius])\r\n//         (d3.hierarchy(data)\r\n//         .sum(d => d.value)\r\n//         .sort((a, b) => b.value - a.value));\r\n//\r\n//\r\n//     const root = partition(data);\r\n//\r\n//     const level = root.descendants().filter(d => d.depth > cutoff).reduce((total, value) => {\r\n//         if (total < value.depth) {\r\n//             total = value.depth;\r\n//         }\r\n//         return total;\r\n//     }, 0);\r\n//\r\n//     console.log(\"Level:\" + level);\r\n//\r\n//\r\n//     // Specify the chart’s colors.\r\n//     const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, root.descendants().filter(d => d.depth > cutoff && d.depth < cutoff + 2).length + 1));\r\n//\r\n//\r\n//     const innerR = d => ((radius * 2) / 10) * (level + 1) - d.y0*3;\r\n//     const outerR = d => ((radius * 2) / 10) * (level + 2) - d.y0*3;\r\n//\r\n//     const arc = d3.arc()\r\n//         .startAngle(d => d.x0)\r\n//         .endAngle(d => d.x1)\r\n//         .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n//         .padRadius(radius / 2)\r\n//         .innerRadius(d => innerR(d)-20)\r\n//         .outerRadius(d => outerR(d));\r\n//\r\n//     // Create the SVG container.\r\n//     const svg = d3.create(\"svg\");\r\n//\r\n//     // Add an arc for each element, with a title for tooltips.\r\n//     const format = d3.format(\",d\");\r\n//     svg.append(\"g\")\r\n//         .attr(\"fill-opacity\", 0.6)\r\n//         .selectAll(\"path\")\r\n//         .data(root.descendants().filter(d => d.depth > cutoff))\r\n//         .join(\"path\")\r\n//         .attr(\"fill\", d => {\r\n//             while (d.depth > cutoff + 1) d = d.parent;\r\n//             console.log(d.data.name);\r\n//             return color(d.data.name);\r\n//         })\r\n//         .attr(\"d\", arc)\r\n//         .append(\"title\")\r\n//         .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n//\r\n//     // Add a label for each element.\r\n//     svg.append(\"g\")\r\n//         .attr(\"pointer-events\", \"none\")\r\n//         .attr(\"text-anchor\", \"middle\")\r\n//         .attr(\"font-size\", 10)\r\n//         .attr(\"font-family\", \"sans-serif\")\r\n//         .selectAll(\"text\")\r\n//         .data(root.descendants().filter(d => d.depth > cutoff && ((outerR(d) - innerR(d)) * (d.x1 - d.x0)) > 5))\r\n//         .join(\"text\")\r\n//         .attr(\"transform\", function (d) {\r\n//             const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\r\n//             const y = ((innerR(d)) + (outerR(d))) / 2;\r\n//             return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n//         })\r\n//         .attr(\"dy\", \"0.1em\")\r\n//         .text(d => d.data.name);\r\n//\r\n//     return svg.attr(\"viewBox\", autoBox).node();\r\n// }\r\n//\r\n// // Copyright 2021-2023 Observable, Inc.\r\n// // Released under the ISC license.\r\n// // https://observablehq.com/@d3/sunburst\r\n// function SunburstMiddle(data, { // data is either tabular (array of objects) or hierarchy (nested objects)\r\n//     path, // as an alternative to id and parentId, returns an array identifier, imputing internal nodes\r\n//     id = Array.isArray(data) ? d => d.id : null, // if tabular data, given a d in data, returns a unique identifier (string)\r\n//     parentId = Array.isArray(data) ? d => d.parentId : null, // if tabular data, given a node d, returns its parent’s identifier\r\n//     children, // if hierarchical data, given a d in data, returns its children\r\n//     value, // given a node d, returns a quantitative value (for area encoding; null for count)\r\n//     sort = (a, b) => d3.descending(a.value, b.value), // how to sort nodes prior to layout\r\n//     label, // given a node d, returns the name to display on the rectangle\r\n//     title, // given a node d, returns its hover text\r\n//     link, // given a node d, its link (if any)\r\n//     linkTarget = \"_blank\", // the target attribute for links (if any)\r\n//     width = 640, // outer width, in pixels\r\n//     height = 400, // outer height, in pixels\r\n//     margin = 1, // shorthand for margins\r\n//     marginTop = margin, // top margin, in pixels\r\n//     marginRight = margin, // right margin, in pixels\r\n//     marginBottom = margin, // bottom margin, in pixels\r\n//     marginLeft = margin, // left margin, in pixels\r\n//     padding = 1, // separation between arcs\r\n//     startAngle = 0, // the starting angle for the sunburst\r\n//     endAngle = 2 * Math.PI, // the ending angle for the sunburst\r\n//     radius = Math.min(width - marginLeft - marginRight, height - marginTop - marginBottom) / 2, // outer radius\r\n//     color = d3.interpolateRainbow, // color scheme, if any\r\n//     fill = \"#ccc\", // fill for arcs (if no color encoding)\r\n//     fillOpacity = 0.6, // fill opacity for arcs\r\n// } = {}) {\r\n//\r\n//     // If id and parentId options are specified, or the path option, use d3.stratify\r\n//     // to convert tabular data to a hierarchy; otherwise we assume that the data is\r\n//     // specified as an object {children} with nested objects (a.k.a. the “flare.json”\r\n//     // format), and use d3.hierarchy.\r\n//     const root = path != null ? d3.stratify().path(path)(data)\r\n//         : id != null || parentId != null ? d3.stratify().id(id).parentId(parentId)(data)\r\n//             : d3.hierarchy(data, children);\r\n//\r\n//\r\n//     // Compute the values of internal nodes by aggregating from the leaves.\r\n//     value == null ? root.count() : root.sum(d => Math.max(0, value(d)));\r\n//\r\n//     // Sort the leaves (typically by descending value for a pleasing layout).\r\n//     if (sort != null) root.sort(sort);\r\n//\r\n//     // Compute the partition layout. Note polar coordinates: x is angle and y is radius.\r\n//     d3.partition().size([endAngle - startAngle, radius])(root);\r\n//\r\n//     // Construct a color scale.\r\n//     if (color != null) {\r\n//         color = d3.scaleSequential([0, root.children.length], color).unknown(fill);\r\n//         root.children.forEach((child, i) => child.index = i);\r\n//     }\r\n//\r\n//     // Construct an arc generator.\r\n//     const arc = d3.arc()\r\n//         .startAngle(d => d.x0 + startAngle)\r\n//         .endAngle(d => d.x1 + startAngle)\r\n//         .padAngle(d => Math.min((d.x1 - d.x0) / 2, 2 * padding / radius))\r\n//         .padRadius(radius / 2)\r\n//         .innerRadius(d => d.y0)\r\n//         .outerRadius(d => d.y1 - padding);\r\n//\r\n//     const svg = d3.create(\"svg\")\r\n//         .attr(\"viewBox\", [\r\n//             marginRight - marginLeft - width / 2,\r\n//             marginBottom - marginTop - height / 2,\r\n//             width,\r\n//             height\r\n//         ])\r\n//         .attr(\"width\", width)\r\n//         .attr(\"height\", height)\r\n//         .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\r\n//         .attr(\"font-family\", \"sans-serif\")\r\n//         .attr(\"font-size\", 10)\r\n//         .attr(\"text-anchor\", \"middle\");\r\n//\r\n//     const cell = svg\r\n//         .selectAll(\"a\")\r\n//         .data(root.descendants())\r\n//         .join(\"a\")\r\n//         .attr(\"xlink:href\", link == null ? null : d => link(d.data, d))\r\n//         .attr(\"target\", link == null ? null : linkTarget);\r\n//\r\n//     cell.append(\"path\")\r\n//         .attr(\"d\", arc)\r\n//         .attr(\"fill\", color ? d => color(d.ancestors().reverse()[1]?.index) : fill)\r\n//         .attr(\"fill-opacity\", fillOpacity);\r\n//\r\n//     if (label != null) cell\r\n//         .filter(d => (d.y0 + d.y1) / 2 * (d.x1 - d.x0) > 10)\r\n//         .append(\"text\")\r\n//         .attr(\"transform\", d => {\r\n//             if (!d.depth) return;\r\n//             const x = ((d.x0 + d.x1) / 2 + startAngle) * 180 / Math.PI;\r\n//             const y = (d.y0 + d.y1) / 2;\r\n//             return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n//         })\r\n//         .attr(\"dy\", \"0.32em\")\r\n//         .text(d => label(d.data, d));\r\n//\r\n//     if (title != null) cell.append(\"title\")\r\n//         .text(d => title(d.data, d));\r\n//\r\n//     return svg.node();\r\n// }\r\n//\r\n// function SunburstZoom(data) {\r\n//     // Specify the chart’s dimensions.\r\n//     const width = 928;\r\n//     const height = width;\r\n//     const radius = width / 6;\r\n//\r\n//     // Create the color scale.\r\n//     const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\r\n//\r\n//     // Compute the layout.\r\n//     const hierarchy = d3.hierarchy(data)\r\n//         .sum(d => d.value)\r\n//         .sort((a, b) => b.value - a.value);\r\n//     const root = d3.partition()\r\n//         .size([2 * Math.PI, hierarchy.height + 1])\r\n//         (hierarchy);\r\n//     root.each(d => d.current = d);\r\n//\r\n//     // Create the arc generator.\r\n//     const arc = d3.arc()\r\n//         .startAngle(d => d.x0)\r\n//         .endAngle(d => d.x1)\r\n//         .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n//         .padRadius(radius * 1.5)\r\n//         .innerRadius(d => d.y0 * radius)\r\n//         .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\r\n//\r\n//     // Create the SVG container.\r\n//     const svg = d3.create(\"svg\")\r\n//         .attr(\"viewBox\", [-width / 2, -height / 2, width, width])\r\n//         .style(\"font\", \"10px sans-serif\");\r\n//\r\n//     // Append the arcs.\r\n//     const path = svg.append(\"g\")\r\n//         .selectAll(\"path\")\r\n//         .data(root.descendants().slice(1))\r\n//         .join(\"path\")\r\n//         .attr(\"fill\", d => {\r\n//             while (d.depth > 1) d = d.parent;\r\n//             return color(d.data.name);\r\n//         })\r\n//         .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\r\n//         .attr(\"pointer-events\", d => arcVisible(d.current) ? \"auto\" : \"none\")\r\n//\r\n//         .attr(\"d\", d => arc(d.current));\r\n//\r\n//     // Make them clickable if they have children.\r\n//     path.filter(d => d.children)\r\n//         .style(\"cursor\", \"pointer\")\r\n//         .on(\"click\", clicked);\r\n//\r\n//     const format = d3.format(\",d\");\r\n//     path.append(\"title\")\r\n//         .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n//\r\n//     const label = svg.append(\"g\")\r\n//         .attr(\"pointer-events\", \"none\")\r\n//         .attr(\"text-anchor\", \"middle\")\r\n//         .style(\"user-select\", \"none\")\r\n//         .selectAll(\"text\")\r\n//         .data(root.descendants().slice(1))\r\n//         .join(\"text\")\r\n//         .attr(\"dy\", \"0.35em\")\r\n//         .attr(\"fill-opacity\", d => +labelVisible(d.current))\r\n//         .attr(\"transform\", d => labelTransform(d.current))\r\n//         .text(d => d.data.name);\r\n//\r\n//     const parent = svg.append(\"circle\")\r\n//         .datum(root)\r\n//         .attr(\"r\", radius)\r\n//         .attr(\"fill\", \"none\")\r\n//         .attr(\"pointer-events\", \"all\")\r\n//         .on(\"click\", clicked);\r\n//\r\n//     // Handle zoom on click.\r\n//     function clicked(event, p) {\r\n//         parent.datum(p.parent || root);\r\n//\r\n//         root.each(d => d.target = {\r\n//             x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n//             x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n//             y0: Math.max(0, d.y0 - p.depth),\r\n//             y1: Math.max(0, d.y1 - p.depth)\r\n//         });\r\n//\r\n//         const t = svg.transition().duration(750);\r\n//\r\n//         // Transition the data on all arcs, even the ones that aren’t visible,\r\n//         // so that if this transition is interrupted, entering arcs will start\r\n//         // the next transition from the desired position.\r\n//         path.transition(t)\r\n//             .tween(\"data\", d => {\r\n//                 const i = d3.interpolate(d.current, d.target);\r\n//                 return t => d.current = i(t);\r\n//             })\r\n//             .filter(function (d) {\r\n//                 return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n//             })\r\n//             .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\r\n//             .attr(\"pointer-events\", d => arcVisible(d.target) ? \"auto\" : \"none\")\r\n//\r\n//             .attrTween(\"d\", d => () => arc(d.current));\r\n//\r\n//         label.filter(function (d) {\r\n//             return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n//         }).transition(t)\r\n//             .attr(\"fill-opacity\", d => +labelVisible(d.target))\r\n//             .attrTween(\"transform\", d => () => labelTransform(d.current));\r\n//     }\r\n//\r\n//     function arcVisible(d) {\r\n//         return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\r\n//     }\r\n//\r\n//     function labelVisible(d) {\r\n//         return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\r\n//     }\r\n//\r\n//     function labelTransform(d) {\r\n//         const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\r\n//         const y = (d.y0 + d.y1) / 2 * radius;\r\n//         return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n//     }\r\n//\r\n//     return svg.node();\r\n// }"],"names":["d3"],"mappings":"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}